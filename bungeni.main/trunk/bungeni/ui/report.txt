Setup
-----
Setting up Database Connection and Utilities:

   >>> from bungeni import models as model
   >>> import datetime
   >>> import bungeni.models.testing
   >>> db = bungeni.models.testing.setup_db()
   >>> from bungeni.alchemist import Session
   >>> session = Session()

Initialise User
---------------
   >>> mp_1 = model.User(u"mp_1", 
   ...        first_name=u"a", 
   ...        last_name=u'ab', 
   ...        email=u"mp1@example.com", 
   ...        date_of_birth=datetime.datetime.now(),
   ...        language="en",
   ...        gender='M')

Initialise Group
----------------

  >>> parliament = model.Parliament(short_name=u"p_1",
  ...                               start_date=datetime.datetime.now(), 
  ...                               election_date=datetime.datetime.now())
  >>> parliament.language = "en"
  >>> session.add( parliament )
  >>> session.flush()

Initialise a report
-------------------
   >>> from bungeni.models import domain
   >>> report = domain.Report()
   >>> report.body_text = '<div class=reporttitle>THIS IS A TEST</div>'
   >>> report.start_date = datetime.datetime.now()
   >>> report.end_date = datetime.datetime.now()
   >>> report.note = "This is a test"
   >>> report.short_name = "Sitting Agenda"
   >>> report.owner = mp_1
   >>> report.language = "en"
   >>> report.created_date = datetime.datetime.now()
   >>> report.group = parliament
   >>> session.add(report)
   >>> session.flush()
   
Generate ODT
------------
   >>> from bungeni.ui.reports import DownloadODT
   >>> from zope.publisher.browser import TestRequest
   >>> request = TestRequest()
   >>> downloadODT = DownloadODT(report, request)
   
To check if ODT is properly generated, we check if the content type of the
response is set

   >>> output = downloadODT()
   >>> request.response.getHeader('Content-type')
   'application/vnd.oasis.opendocument.text'

Generate PDF
------------
   >>> from bungeni.ui.reports import DownloadPDF
   >>> from zope.publisher.browser import TestRequest
   >>> request = TestRequest()
   
To check if PDF is properly generated, we check if the content type of the
response is set

   >>> downloadPDF = DownloadPDF(report, request)
   >>> output = downloadPDF()
   >>> request.response.getHeader('Content-type')
   'application/pdf'
   
Cleanup
--------
   >>> session.flush()
   >>> session.close()

