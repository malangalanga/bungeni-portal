<?xml version="1.0"?>
<workflow id="question_workflow"
    title="Question Workflow"
    description="A question"
    domain="bungeni.ui"
    initial_state="">
    
    <!-- Workflow state/transition names:
    
    State names should be lowercase "adjectives". !+ note, not all are...
    Transition names should be lowercase "verbs".
    
    Note that given that all names are specified as XML @id attributes,
    state and transition names must be unique for the XML document.
    
    All multiple word names are joined using an "_" (underscore) character.
    -->
    
    <state id="working_draft" title="Working Draft">
        <grant permission="bungeni.question.Edit" role="bungeni.Clerk" />
        <grant permission="bungeni.question.Edit" role="bungeni.Speaker" />
        <grant permission="bungeni.question.Delete" role="bungeni.Clerk" />
        <grant permission="bungeni.question.Delete" role="bungeni.Speaker" />
        <grant permission="zope.View" role="bungeni.Clerk" />
        <grant permission="zope.View" role="bungeni.Speaker" />
        <grant permission="bungeni.fileattachment.Add" role="bungeni.Clerk" />
        <grant permission="bungeni.fileattachment.Edit" role="bungeni.Speaker" />
        <deny permission="zope.View" role="bungeni.Owner" />
        <deny permission="bungeni.question.Add" role="bungeni.MP" />
        <deny permission="zope.View" role="bungeni.MP" />
        <deny permission="zope.View" role="bungeni.Minister" />
        <deny permission="zope.View" role="bungeni.Everybody" /> 
        <deny permission="zope.View" role="bungeni.Anybody" />
    </state>
    <state id="draft" title="Draft">
        <grant permission="bungeni.question.Edit" role="bungeni.Owner" />
        <grant permission="zope.View" role="bungeni.Owner" />
        <grant permission="bungeni.question.Delete" role="bungeni.Owner" />
        <deny permission="bungeni.question.Add" role="bungeni.MP" />
        <deny permission="zope.View" role="bungeni.MP" />
        <deny permission="zope.View" role="bungeni.Clerk" />
        <deny permission="zope.View" role="bungeni.Speaker" />
        <deny permission="zope.View" role="bungeni.Minister" />
        <deny permission="zope.View" role="bungeni.Everybody" /> 
        <deny permission="zope.View" role="bungeni.Anybody" />
        <grant permission="bungeni.fileattachment.Add" role="bungeni.Owner" />
        <grant permission="bungeni.fileattachment.Edit" role="bungeni.Owner" />
    </state>
    <state id="submitted" title="Submitted to clerk">
        <deny permission="bungeni.question.Edit" role="bungeni.Owner" />
        <grant permission="zope.View" role="bungeni.Owner" />
        <grant permission="zope.View" role="bungeni.Clerk" />
        <grant permission="zope.View" role="bungeni.Speaker" />
        <deny permission="bungeni.question.Delete" role="bungeni.Owner" />
        <deny permission="bungeni.question.Delete" role="bungeni.Clerk" />
        <deny permission="bungeni.question.Delete" role="bungeni.Speaker" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Owner" />
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Owner" />
    </state>
    <state id="received" title="Received by clerk">
        <grant permission="bungeni.question.Edit" role="bungeni.Clerk" />
        <grant permission="bungeni.fileattachment.Add" role="bungeni.Clerk" />
        <grant permission="bungeni.fileattachment.Edit" role="bungeni.Clerk" />
    </state>
    <state id="completed" title="Submitted to the Speaker">
        <deny permission="bungeni.question.Edit" role="bungeni.Clerk" />
        <grant permission="bungeni.question.Edit" role="bungeni.Speaker" />
        <grant permission="zope.View" role="bungeni.Speaker" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Clerk" />
        <grant permission="bungeni.fileattachment.Add" role="bungeni.Speaker" /> 
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Clerk" />
        <grant permission="bungeni.fileattachment.Edit" role="bungeni.Speaker" />
    </state>
    <state id="admissible" title="Admissible">
        <grant permission="zope.View" role="bungeni.Everybody" />
        <grant permission="zope.View" role="bungeni.Anybody" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Speaker" /> 
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Speaker" />
    </state>
    <state id="inadmissible" title="Inadmissible">
        <deny permission="bungeni.question.Edit" role="bungeni.Speaker" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Speaker" /> 
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Speaker" />
    </state>
    <state id="clarification_required" title="Needs MPs clarification">
        <grant permission="zope.View" role="bungeni.Owner" />
        <deny permission="bungeni.question.Edit" role="bungeni.Clerk" />
        <grant permission="bungeni.question.Edit" role="bungeni.Owner" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Clerk" />
        <grant permission="bungeni.fileattachment.Add" role="bungeni.Owner" />
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Clerk" />
        <grant permission="bungeni.fileattachment.Edit" role="bungeni.Owner" />
    </state>
    <state id="incomplete" title="Needs clerks clarification">
        <deny permission="bungeni.question.Edit" role="bungeni.Speaker" />
        <grant permission="bungeni.question.Edit" role="bungeni.Clerk" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Speaker" />
        <grant permission="bungeni.fileattachment.Add" role="bungeni.Clerk" /> 
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Speaker" />
        <grant permission="bungeni.fileattachment.Edit" role="bungeni.Clerk" />
    </state>
    <state id="schedule_pending" title="Schedule pending">
        <deny permission="bungeni.question.Edit" role="bungeni.Speaker" />
    </state>
    <state id="scheduled" title="Scheduled">
        <deny permission="bungeni.question.Edit" role="bungeni.Speaker" />
        <grant permission="bungeni.response.Add" role="bungeni.Clerk" />
        <grant permission="bungeni.response.View" role="bungeni.Clerk" />
    </state>
    <state id="adjourned" title="Debate adjourned">
    </state>
    <state id="response_pending" title="Pending response">
        <deny permission="bungeni.question.Edit" role="bungeni.Speaker" />
        <grant permission="bungeni.response.Edit" role="bungeni.Minister" />
        <grant permission="bungeni.response.View" role="bungeni.Minister" />
        <!-- for when coming via redraft_response -->
        <deny permission="bungeni.question.Edit" role="bungeni.Clerk" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Clerk" /> 
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Clerk" />
    </state>
    <state id="response_submitted" title="Response submitted">
        <grant permission="zope.View" role="bungeni.Clerk"/>
        <deny permission="bungeni.response.Edit" role="bungeni.Minister"/>
        <grant permission="bungeni.response.View" role="bungeni.Clerk" />
        <grant permission="bungeni.response.View" role="bungeni.Speaker" />
        <!-- to enable edit, thus enabling follow-up via redraft_response -->
        <grant permission="bungeni.question.Edit" role="bungeni.Clerk" />
        <grant permission="bungeni.fileattachment.Add" role="bungeni.Clerk" /> 
        <grant permission="bungeni.fileattachment.Edit" role="bungeni.Clerk" />
    </state>
    <state id="response_completed" title="Response completed">
        <grant permission="zope.View" role="bungeni.Everybody" />
        <grant permission="zope.View" role="bungeni.Anybody" />
        <grant permission="bungeni.response.View" role="bungeni.Everybody" />
        <grant permission="bungeni.response.View" role="bungeni.Anybody" />
    </state>
    <state id="deferred" title="Deferred">
    </state>
    <state id="elapsed" title="Elapsed">
    </state>
    <state id="debated" title="Debated">
        <deny permission="bungeni.question.Edit" role="bungeni.Clerk" />
        <deny permission="bungeni.question.Edit" role="bungeni.Speaker" />
    </state>
    <state id="dropped" title="Dropped">
        <deny permission="bungeni.question.Edit" role="bungeni.Speaker" />
        <deny permission="bungeni.question.Edit" role="bungeni.Clerk" />
        <deny permission="bungeni.question.Edit" role="bungeni.Owner" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Speaker" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Clerk" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Owner" />
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Speaker" />
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Clerk" />
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Owner" />
    </state>
    <state id="withdrawn" title="Withdrawn">
        <deny permission="bungeni.question.Edit" role="bungeni.Speaker" />
        <deny permission="bungeni.question.Edit" role="bungeni.Clerk" />
        <deny permission="bungeni.question.Edit" role="bungeni.Owner" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Speaker" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Clerk" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Owner" />
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Speaker" />
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Clerk" />
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Owner" />
    </state>
    <state id="withdrawn_public" title="Withdrawn">
        <deny permission="bungeni.question.Edit" role="bungeni.Speaker" />
        <deny permission="bungeni.question.Edit" role="bungeni.Clerk" />
        <deny permission="bungeni.question.Edit" role="bungeni.Owner" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Speaker" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Clerk" />
        <deny permission="bungeni.fileattachment.Add" role="bungeni.Owner" />
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Speaker" />
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Clerk" />
        <deny permission="bungeni.fileattachment.Edit" role="bungeni.Owner" />
    </state>
    
    
    <transition id="create"
        title="Create Question"
        trigger="automatic"
        source=""
        destination="draft"
        action="bungeni.core.workflows.question.actions.create"
        condition="bungeni.core.workflows.utils.conditions.user_is_context_owner"
        order="0"
    />
    <transition id="create_on_behalf_of"
        title="Create Question (On behalf of)"
        trigger="automatic"
        source=""
        destination="working_draft"
        action="bungeni.core.workflows.question.actions.create"
        condition="bungeni.core.workflows.utils.conditions.user_is_not_context_owner"
        order="0"
    />
    <transition id="submit_to_clerk"
        title="Submit to Clerk"
        trigger="manual"
        source="working_draft draft"
        destination="submitted"
        permission="bungeni.question.Submit"
        action="bungeni.core.workflows.question.actions.submit_to_clerk"
        condition=""
        event=".interfaces.IQuestionSubmittedEvent"
        order="1"
    />
    <transition id="receive_by_clerk"
        title="Receive"
        trigger="manual"
        source="submitted"
        destination="received"
        permission="bungeni.question.Receive"
        action="bungeni.core.workflows.question.actions.received_by_clerk"
        condition=""
        event=".interfaces.IQuestionReceivedEvent"
        order="2"
    />
    <!--
    If a question is flagged by the Clerk / Speakers office as 
    "requiring editing by the MP" (e.g. missing data etc.) the system sends 
    a notification to the MP to access the question and review it according 
    to Speaker/Clerk's office remarks. 

    Or send to the mp for clarification from incomplete state.
    
    A new version of the question will be created, once the question is 
    modified and saved.
    -->
    <transition id="to_clarify_mp"
        title="Needs Clarification by MP"
        trigger="manual"
        source="received incomplete"
        destination="clarification_required"
        permission="bungeni.question.clerk.Review"
        action="bungeni.core.workflows.question.actions.mp_clarify"
        condition=""
        event=".interfaces.IQuestionClarifyEvent"
        require_confirmation="true"
        order="3"
    />
    <!--
    After the Clerk's Office is through with the Notices reviews and there 
    are satisfied that the Questions have all the formal requirements – the 
    question is marked as “completed” and is made available / forwarded to the 
    Speaker's Office for reviewing and to make it “admissible”. At the same 
    time the question is also forwarded to the ministry. While the ministry 
    can preview the question the ministry cannot respond until the state of the
    question has been set to “admissible” by the Speaker's office (for details 
    about questions being set to “admissible” see Approval of Questions)
    -->
    <transition id="to_complete"
        title="Submit to the Speaker Office"
        trigger="manual"
        source="received"
        destination="completed"
        permission="bungeni.question.clerk.Review"
        action="bungeni.core.workflows.question.actions.complete"
        condition=""
        event=".interfaces.IQuestionCompletedEvent"
        order="4"
    />
    <!--
    the Speaker's office may decide that a proposed Question is “admissible”, 
    “inadmissible” or “requires amendment”.
    
    An inadmissible Question is rejected and the Member who proposed the 
    Question will be notified accordingly via their workspace and optionally by 
    email. Question that require amendments may be modified and re-submitted, 
    Questions marked as “admissible” are then made available for Scheduling.
    -->
    <transition id="approve"
        title="Approve"
        trigger="manual"
        source="completed"
        destination="admissible"
        permission="bungeni.question.speaker.Review"
        action="bungeni.core.workflows.question.actions.approve"
        condition=""
        event=""
        order="6"
    />
    <transition id="reject"
        title="Reject"
        trigger="manual"
        source="completed"
        destination="inadmissible"
        permission="bungeni.question.speaker.Review"
        action="bungeni.core.workflows.question.actions.reject"
        condition=""
        event=".interfaces.IQuestionRejectedEvent"
        require_confirmation="true"
        order="7"
    />
    <transition id="require_amendment"
        title="Needs Clarification"
        trigger="manual"
        source="completed"
        destination="incomplete"
        permission="bungeni.question.speaker.Review"
        action="bungeni.core.workflows.question.actions.require_amendment"
        condition=""
        event=""
        require_confirmation="true"
        order="8"
    />
    <!--
    A question that requires clarification/amendmends can be resubmitted by 
    the clerks office.
    -->
    <transition id="complete_clarify"
        title="Complete"
        trigger="manual"
        source="incomplete"
        destination="completed"
        permission="bungeni.question.clerk.Review"
        action="bungeni.core.workflows.question.actions.complete_clarify"
        condition=""
        event=""
        order="9"
    />
    <!--
    After a question is amended it can be resubmitted to the clerks office.
    -->
    <transition id="resubmit_clerk"
        title="Resubmit to Clerk"
        trigger="manual"
        source="clarification_required"
        destination="submitted"
        permission="bungeni.question.Submit"
        action="bungeni.core.workflows.question.actions.submit_to_clerk"
        condition=""
        event=""
        order="10"
    />
    <!--
    Among the “admissible” questions the Speaker or the Clerk's office will 
    select questions for scheduling for a specific sitting
    Questions when “admissible” are made available for “scheduling”
    Questions with the “require a Written response” flag do not appear as 
    questions available for scheduling.
    -->
    <!--
    An admissible (or deferred) question may be made available for scheduling.
    -->
    <transition id="allow_schedule"
        title="Make available for scheduling"
        trigger="manual"
        source="admissible deferred adjourned"
        destination="schedule_pending"
        permission="bungeni.question.Schedule"
        action=""
        condition="bungeni.core.workflows.question.conditions.is_oral_response"
        event=".interfaces.IQuestionSchedulePendingEvent"
        order="11"
    />
    
    <transition id="reschedule"
        title="Reschedule"
        trigger="system"
        source="scheduled"
        destination="schedule_pending"
        permission="bungeni.question.Schedule"
        action=""
    />
    
    <transition id="schedule"
        title="Schedule"
        trigger="system"
        source="schedule_pending"
        destination="scheduled"
        permission="bungeni.question.Schedule"
        action="bungeni.core.workflows.question.actions.schedule"
        event=".interfaces.IQuestionScheduledEvent"
        order="12"
        condition="bungeni.core.workflows.question.conditions.is_scheduled"
    />
    <!--
    Questions which are flagged as “requiring written response” are never 
    scheduled, but are answered directly by the ministry.
    -->
    <transition id="send_ministry"
        title="Send to Ministry"
        trigger="manual"
        source="admissible"
        destination="response_pending"
        permission="bungeni.question.Schedule"
        action="bungeni.core.workflows.question.actions.send_to_ministry"
        condition="bungeni.core.workflows.question.conditions.is_written_response"
        event=".interfaces.IQuestionSentToMinistryEvent"
        order="13"
    />
    <transition id="submit_response"
        title="Submit Response"
        trigger="manual"
        source="response_pending"
        destination="response_submitted"
        permission="bungeni.response.Submit"
        condition="bungeni.core.workflows.utils.response_allow_submit"
        event="bungeni.core.workflows.interfaces.IResponseSubmittedEvent"
        action="bungeni.core.workflows.question.actions.respondWriting"
        order="15"
    />
    <transition id="redraft_response"
        title="Redraft Response"
        trigger="manual"
        source="response_submitted"
        destination="response_pending"
        permission="bungeni.response.RevertTransitions" 
        condition=""
        action=""
        event=""
        order="16"
    /><!-- 
        !+ Note that there is no error triggered when using an undeclared 
        permission -:- each perssion shoudl be explicitly tested for 
    -->
    <transition id="complete_response"
        title="Complete Response"
        trigger="manual"
        source="response_submitted"
        destination="response_completed"
        permission="bungeni.response.Complete" 
        event="bungeni.core.workflows.interfaces.IResponseCompletedEvent"
        order="17"
    />
    <transition id="elapse"
        title="Elapse"
        trigger="manual"
        source="response_pending deferred"
        destination="elapsed"
        permission="bungeni.question.Elapse"
        action="bungeni.core.workflows.question.actions.elapse"
        condition=""
        event=""
        require_confirmation="true"
        order="18"
    />
    <!--
    All admissible questions awaiting an oral response etc. and flag them for 
    “scheduling” for a later day or otherwise drop them from the pending ones. 
    Dropping a question sets its status to “Deferred” 
    -->
    <transition id="defer"
        title="Defer"
        trigger="manual"
        source="admissible schedule_pending adjourned"
        destination="deferred"
        permission="bungeni.question.Schedule"
        action="bungeni.core.workflows.question.actions.defer"
        condition=""
        event=".interfaces.IQuestionDeferredEvent"
        order="19"
    />
    <!--
    A deferred question may be send to a ministry for a written response
    -->
    <transition id="defer_ministry"
        title="Send to Ministry"
        trigger="manual"
        source="deferred"
        destination="response_pending"
        permission="bungeni.question.Schedule"
        action="bungeni.core.workflows.question.actions.send_to_ministry"
        condition="bungeni.core.workflows.question.conditions.is_ministry_set"
        event=".interfaces.IQuestionSentToMinistryEvent"
        order="20"
    />
    <!--
    In a sitting the question is to be debated, but for reasons such as absence
    of the MP, cannot be, so it is dropped. 
    -->
    <transition id="drop"
        title="Drop"
        trigger="manual"
        source="scheduled"
        destination="dropped"
        permission="bungeni.question.Schedule"
        action="bungeni.core.workflows.question.actions.drop"
        condition=""
        event=".interfaces.IQuestionDroppedEvent"
        order="22"
    />
    <transition id="continue_debate"
        title="Debate adjourned"
        trigger="manual"
        source="scheduled"
        destination="adjourned"
        permission="bungeni.question.Schedule"
        condition=""
        event=""
        order="23"
    />
    <!--
    Question was debated in the plenary
    -->
    <transition id="debate"
        title="Debated"
        trigger="manual"
        source="scheduled"
        destination="debated"
        permission="bungeni.question.Schedule"
        action="bungeni.core.workflows.question.actions.respondSitting"
        event=".interfaces.IQuestionDebatedEvent"
        order="25"
    />
    <!--
    The MP can withdraw his question at (almost) any stage i.e the stages where 
    it can still be presented to the ministry/house.
    -->
    <transition id="withdraw"
        title="Withdraw"
        trigger="manual"
        source="submitted received completed clarification_required"
        destination="withdrawn"
        permission="bungeni.question.Withdraw"
        action="bungeni.core.workflows.question.actions.withdraw"
        condition=""
        require_confirmation="true"
        event=""
        order="26"
    />
    <transition id="withdraw_public"
        title="Withdraw"
        trigger="manual"
        source="admissible schedule_pending scheduled deferred
             adjourned schedule_pending"
        destination="withdrawn_public"
        permission="bungeni.question.Withdraw"
        action="bungeni.core.workflows.question.actions.withdraw"
        condition=""
        require_confirmation="true"
        event=""
        order="27"
    />

</workflow>

