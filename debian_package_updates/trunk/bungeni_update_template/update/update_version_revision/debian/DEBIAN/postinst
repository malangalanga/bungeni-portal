#!/bin/sh
#===============================================================================
#
#          FILE:  postinst
#
#   DESCRIPTION:  Update post install script
#
#       OPTIONS:  configure
#          BUGS:  ---
#         NOTES:  ---
#  DEPENDENCIES:  	
#        AUTHOR:  Samuel Weru, samweru@gmail.com
#       COMPANY:  UNDESA
#       VERSION:  ---
#       CREATED:  ---
#      REVISION:  ---
#===============================================================================

set -e

case "$1" in
configure)
		
		export LATEST=$(ls /opt/bungeni/updates/latest | grep bungeni-update | cut -d'.' -f -2)
		
		if [ ! -d /opt/bungeni/updates/$LATEST ] ; then
			echo "Changing latest folder update name"
			mv /opt/bungeni/updates/latest /opt/bungeni/updates/$LATEST
		fi
			
		# echo "Extracting from update archive"	
		# tar -C / -zxf /opt/bungeni/updates/$LATEST/$LATEST.tar.gz
		
		# echo "Creating latest update list"
		# cat /opt/bungeni/updates/$LATEST/common.list /opt/bungeni/updates/$LATEST/include.list > /var/lib/dpkg/info/$LATEST.list
		# find /opt/bungeni/updates/$LATEST/ >> /var/lib/dpkg/info/$LATEST.list
		
		# echo "Creating latest update md5sums"
		# for i in $(cat /var/lib/dpkg/info/$LATEST.list)
		# do 
		#	if [ ! -d "$i" ]
		#	then
		#		echo $i >> /opt/bungeni/updates/$LATEST/files.list
		#	fi
		# done
		
		# cat /opt/bungeni/updates/$LATEST/files.list | xargs md5sum > /var/lib/dpkg/info/$LATEST.md5sums
		
		###############################################
		# Start Postgresql, Do Upgrade, Stop Postgresql
		###############################################
		# echo "Running db schema upgrade"
		# su bungeni -l -c "/opt/bungeni/bungeni_apps/postgres/bin/pg_ctl start -D /opt/bungeni/bungeni_apps/postgres-data/ -l /opt/bungeni/bungeni_apps/logs/postgres.log"
		# sleep 10
		# su bungeni -l -c "/opt/bungeni/bungeni_apps/bungeni/bin/alembic -c /opt/bungeni/bungeni_apps/bungeni/alembic.ini upgrade head"
		# su bungeni -l -c "/opt/bungeni/bungeni_apps/postgres/bin/pg_ctl stop -D /opt/bungeni/bungeni_apps/postgres-data/ -l /opt/bungeni/bungeni_apps/logs/postgres.log"
		
		#################################################################
		# Exist Update: Load new exist, restore data, Kill all bungeni ps
		#################################################################
		# echo "Extracting from update archive"	
		# rm -rf /opt/bungeni/bungeni_apps/exist
		# tar -C /opt/bungeni/bungeni_apps -zxf /opt/bungeni/updates/$LATEST/exist_xmldb-17342.tar.gz
		# mv /opt/bungeni/bungeni_apps/exist* /opt/bungeni/bungeni_apps/exist
		# chown bungeni:bungeni -Rf /opt/bungeni/bungeni_apps/exist
		
		# echo "Clean out any lock files"
		# find /opt/bungeni/bungeni_apps/exist/webapp/WEB-INF/data -type f \( -name '*.lck' -o -name '*.lock' \) -exec rm -rf {} \;
		
		# echo "Start new exist"	
		# su bungeni -l -c "JAVA_HOME=$JAVA_HOME java -Xms128m -Xmx512m \
		#            -Dfile.encoding=UTF-8 \
		#            -Djava.endorsed.dirs=/opt/bungeni/bungeni_apps/exist/lib/endorse \
		#            -Dexist.home=/opt/bungeni/bungeni_apps/exist \
		#            -Djetty.port=8088 \
		#            -jar /opt/bungeni/bungeni_apps/exist/start.jar jetty" &
		
		# sleep 11
		# echo "Restore bungeni-xml"
		# su bungeni -l -c "JAVA_HOME=$JAVA_HOME \ 
		#		java -jar -Dexist.home=/opt/bungeni/bungeni_apps/exist/ /opt/bungeni/bungeni_apps/exist/start.jar \
		#		backup -u admin -r /opt/bungeni/updates/$LATEST/db/bungeni-xml/__contents__.xml \
		#		-ouri=xmldb:exist://127.0.0.1:8088/exist/xmlrpc"
		
		# echo "Restore bungeni-atts"
		# su bungeni -l -c "JAVA_HOME=$JAVA_HOME \ 
		#		java -jar -Dexist.home=/opt/bungeni/bungeni_apps/exist/ /opt/bungeni/bungeni_apps/exist/start.jar \
		#		backup -u admin -r /opt/bungeni/updates/$LATEST/db/bungeni-atts/__contents__.xml \
		#		-ouri=xmldb:exist://127.0.0.1:8088/exist/xmlrpc"
		
		# echo "Restore framework"
		# su bungeni -l -c "JAVA_HOME=$JAVA_HOME \ 
		#		java -jar -Dexist.home=/opt/bungeni/bungeni_apps/exist/ /opt/bungeni/bungeni_apps/exist/start.jar \
		#		backup -u admin -r /opt/bungeni/updates/$LATEST/db/framework/__contents__.xml \
		#		-ouri=xmldb:exist://127.0.0.1:8088/exist/xmlrpc"
				
		# echo "Make /db/framework/bungeni/controller.xql executable"
		# su bungeni -l -c "ant -buildfile /opt/bungeni/updates/$LATEST/build.xml"
		
		# echo "Kill bungeni processes"
		# pkill -u bungeni
		
		#########################################
		# Check if RabbitMQ has messages
		#########################################		
		tq=$(su bungeni -l -c "/opt/bungeni/bungeni_apps/rabbitmq/sbin/rabbitmqctl list_queues -p / | grep task_queue | sed 's/[a-z_]*\|[[:space:]]*//g'")
		bsq=$(su bungeni -l -c "/opt/bungeni/bungeni_apps/rabbitmq/sbin/rabbitmqctl list_queues -p / | grep bungeni_serialization_queue | sed 's/[a-z_]*\|[[:space:]]*//g'")
		beq=$(su bungeni -l -c "/opt/bungeni/bungeni_apps/rabbitmq/sbin/rabbitmqctl list_queues -p / | grep bungeni_email_queue | sed 's/[a-z_]*\|[[:space:]]*//g'")
		bsoq=$(su bungeni -l -c "/opt/bungeni/bungeni_apps/rabbitmq/sbin/rabbitmqctl list_queues -p / | grep bungeni_serialization_output_queue | sed 's/[a-z_]*\|[[:space:]]*//g'")
		
		rq=$(($tq+$bsq+$beq+$bsoq))
		
		if [ $rq -ge 1 ]
		then
			echo "Queue is not empty. Aborting installation."
			exit 0
		else
			su bungeni -l -c "/opt/bungeni/bungeni_apps/rabbitmq/sbin/rabbitmqctl stop_app"
			su bungeni -l -c "/opt/bungeni/bungeni_apps/rabbitmq/sbin/rabbitmqctl reset"
			tar -C /opt/bungeni/bungeni_apps -zxf /opt/bungeni/updates/$LATEST/rabbitmq-2.8.4.tar.gz
			rm -rf /opt/bungeni/bungeni_apps/rabbitmq
			mv /opt/bungeni/bungeni_apps/rabbitmq* /opt/bungeni/bungeni_apps/rabbitmq
			chown bungeni:bungeni -Rf /opt/bungeni/bungeni_apps/rabbitmq
			su bungeni -l -c "/opt/bungeni/bungeni_apps/rabbitmq/sbin/rabbitmqctl start_app"
		fi
    ;;
*)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

exit 0
