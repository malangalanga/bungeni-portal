[buildout]

platform_parts = 
;      nginx
;      nginx-ctl
;      memcached
;      memcached-ctl
      xapian 
      xapian-bindings 
      postgresql
;      postgresql-download
;      postgresql-src-setup 
;      db-ctl 
;      db-shell 
;      db-init 
;      db-reset
;      db-load-data-sql
;      db-load-user-data-sql
;      db-load-custom-data-sql
;      db-load-custom-capetown-sql
;      db-load-data-script
;      db-load-capetown-data-script
;;      deliverance
      psycopg2 
;;      jetty
;;      jetty-ctl 
;     exist
;     exist-setup
;     exist-ctl

[postgresql]
recipe = zc.recipe.cmmi
url = ftp://ftp.cs.tu-berlin.de/pub/misc/postgresql/v8.3.4/postgresql-8.3.4.tar.bz2

[postgresql-download]
recipe = hexagonit.recipe.download
url = ftp://ftp.cs.tu-berlin.de/pub/misc/postgresql/v8.3.4/postgresql-8.3.4.tar.bz2
download-only = true

[postgresql-src-setup]
recipe = plone.recipe.command
command = mkdir {buildout:parts-directory}/postgresql && cd {buildout:parts-directory} && tar --strip-components=1 -xvf {postgresql-download:location}/postgresql-8.3.4.tar.bz2


[psycopg2]
recipe = zc.recipe.egg:custom
find-links = http://www.initd.org/pub/software/psycopg/PSYCOPG-2-0/psycopg2-2.0.6.tar.gz
define = PSYCOPG_EXTENSIONS,PSYCOPG_DISPLAY_SIZE,PSYCOPG_NEW_BOOLEAN,HAVE_PQFREEMEM,HAVE_PQPROTOCOL3
rpath = ${postgresql:location}/lib
include-dirs = ${postgresql:location}/include
library-dirs = ${postgresql:location}/lib

;; [deliverance]
;; recipe = plone.recipe.deliverance

[db-shell]
recipe = buildout_script
template = psql.in
template_dir = data/scripts

[db-init]
recipe = buildout_script
template = setup-database.in
template_dir = data/scripts

[db-ctl]
recipe = buildout_script
template = pg_ctl.in
template_dir = data/scripts

[db-reset]
recipe = buildout_script
template = reset-db.in
template_dir = data/scripts

[db-load-data-sql]
recipe = buildout_script
template = load-demo-data.sql.in
template_dir = data/demodata

[db-load-user-data-sql]
recipe = buildout_script
template = user-created-data.sql.in
template_dir = data/demodata

[db-load-custom-data-sql]
recipe = buildout_script
template = custom.sql.in
template_dir = data/demodata

[db-load-custom-capetown-sql]
recipe = buildout_script
template = custom-capetown.sql.in
template_dir = data/demodata


[db-load-data-script]
recipe = ore.recipe.fs:mkfile
path = ${buildout:bin-directory}/load-demo-data
mode = 0755
content =
 #!/bin/sh
    ${buildout:directory}/bin/psql bungeni < ${buildout:directory}/bin/load-demo-data.sql
    ${buildout:directory}/bin/psql bungeni < ${buildout:directory}/bin/user-created-data.sql
    ${buildout:directory}/bin/psql bungeni < ${buildout:directory}/bin/custom.sql

[db-load-capetown-data-script]
recipe = ore.recipe.fs:mkfile
path = ${buildout:bin-directory}/load-capetown-demo-data
mode = 0755
content =
 #!/bin/sh
    ${buildout:directory}/bin/psql bungeni < ${buildout:directory}/bin/load-demo-data.sql
    ${buildout:directory}/bin/psql bungeni < ${buildout:directory}/bin/custom-capetown.sql


[xapian]
recipe = zc.recipe.cmmi
url = http://xappy.googlecode.com/files/xapian-core-14157.tgz

[xapian-bindings]
recipe = zc.recipe.cmmi
url = http://xappy.googlecode.com/files/xapian-bindings-14157.tgz
extra_options =  
    PYTHON_LIB=${xapian:location}/lib/python
    XAPIAN_CONFIG=${xapian:location}/bin/xapian-config-1.1 
    --with-python 
    --with-php=no 
    --with-ruby=no 
    --with-java=no 
    --with-csharp=no

[nginx]
recipe = zc.recipe.cmmi
url = http://sysoev.ru/nginx/nginx-0.5.22.tar.gz
extra_options = --with-poll_module

[nginx-ctl]
recipe = ore.recipe.fs:mkfile
path = ${buildout:bin-directory}/nginx
mode = 0755
content =
 #!/bin/sh
 PIDFILE=${nginx:location}/logs/nginx.pid
    case "$1" in
      start)
       ${nginx:location}/sbin/nginx -c ${buildout:directory}/data/conf/nginx.conf
        ;;
      stop)
        kill -QUIT `cat $PIDFILE`
        ;;
      reload)
        kill -HUP `cat $PIDFILE`
      ;;
      restart|force-reload)
        $0 stop
        sleep 1
        $0 start
        ;;
      *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
        exit 1
        ;;
    esac

[memcached]
recipe = zc.recipe.cmmi
url = http://www.danga.com/memcached/dist/memcached-1.2.2.tar.gz
extra_options = --with-libevent=${libevent:location}

[memcached-ctl]
recipe = ore.recipe.fs:mkfile
path = ${buildout:bin-directory}/memcached
mode = 0755
content =
 #!/bin/sh
 PIDFILE=${memcached:location}/memcached.pid
    case "$1" in
      start)
       ${memcached:location}/bin/memcached -d -P $PIDFILE
        ;;
      stop)
        kill `cat $PIDFILE`
        ;;
      restart|force-reload)
        $0 stop
        sleep 1
        $0 start
        ;;
      *)
        echo "Usage: $SCRIPTNAME {start|stop|restart}" >&2
        exit 1
        ;;
    esac


[libevent]
recipe = zc.recipe.cmmi
url = http://www.monkey.org/~provos/libevent-1.3b.tar.gz

[jetty]
recipe = hexagonit.recipe.download
url = http://dist.codehaus.org/jetty/jetty-6.1.7/jetty-6.1.7.zip
strip-top-level-dir = true

[jetty-ctl]
recipe = ore.recipe.fs:mkfile
path = ${buildout:bin-directory}/jetty
mode = 0755
content =
 #!/bin/sh
    case "$1" in
      start)
       sh ${jetty:location}/bin/jetty.sh start
        ;;
      stop)
       sh ${jetty:location}/bin/jetty.sh stop
        ;;
      restart)
       sh ${jetty:location}/bin/jetty.sh restart
        ;;
      *)
        echo "Usage: $SCRIPTNAME {start|stop|restart}" >&2
        exit 1
        ;;
    esac

[exist]
recipe = hexagonit.recipe.download
url = http://prdownloads.sourceforge.net/exist/eXist-setup-1.2.0-rev7233.jar
download-only = true

[exist-setup]
recipe = plone.recipe.command
command = java -jar ${exist:location}/eXist-setup-1.2.0-rev7233.jar -p ${buildout:parts-directory}/exist

[exist-ctl]
;; java -Dserver.xml=server2.xml -jar start.jar standalone
;; java -jar start.jar shutdown -uri=xmldb:exist://localhost:8088/xmlrpc
recipe = ore.recipe.fs:mkfile
path = ${buildout:bin-directory}/exist
mode = 0755
content =
 #!/bin/sh
    case "$1" in
      start)
       sh ${exist:location}/bin/server.sh
        ;;
      stop)
       sh ${exist:location}/bin/shutdown.sh
        ;;
      *)
        echo "Usage: $SCRIPTNAME {start|stop}" >&2
        exit 1
        ;;
    esac



