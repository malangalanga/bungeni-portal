[buildout]

platform_parts = 
;      nginx
;      nginx-ctl
;      memcached
;      memcached-ctl
;      postgresql 
;      db-ctl 
;      db-shell 
;      db-init 
;      db-reset
      psycopg2 
      diagrammer
      restore-localization-forms-defaults
      admin-passwd
      reporting-documentation
;;      jetty
;;      jetty-ctl 
;;      exist
;;      exist-setup
;;      exist-ctl

;[postgresql]
;recipe = zc.recipe.cmmi
;url = http://ftp.postgresql.org/pub/source/v8.3.17/postgresql-8.3.17.tar.gz

[psycopg2]
recipe = zc.recipe.egg:custom
find-links = http://initd.org/psycopg/tarballs/PSYCOPG-2-4/psycopg2-2.4.5.tar.gz
#http://www.initd.org/pub/software/psycopg/PSYCOPG-2-0/psycopg2-2.0.6.tar.gz
define = PSYCOPG_EXTENSIONS,PSYCOPG_DISPLAY_SIZE,PSYCOPG_NEW_BOOLEAN,HAVE_PQFREEMEM,HAVE_PQPROTOCOL3
rpath =  ${buildout:directory}/../postgres/lib
include-dirs =  ${buildout:directory}/../postgres/include
library-dirs =  ${buildout:directory}/../postgres/lib
environment = psycopg2-env

[psycopg2-env]
PATH=  ${buildout:directory}/../postgres/bin:%(PATH)s



;[db-shell]
;recipe = buildout_script
;template = psql.in
;template_dir = data/scripts

;[db-init]
;recipe = buildout_script
;template = setup-database.in
;template_dir = data/scripts

;[db-ctl]
;recipe = buildout_script
;template = pg_ctl.in
;template_dir = data/scripts

;[db-reset]
;recipe = buildout_script
;template = reset-db.in
;template_dir = data/scripts

[nginx]
recipe = zc.recipe.cmmi
url = http://sysoev.ru/nginx/nginx-0.5.22.tar.gz
extra_options = --with-poll_module

[nginx-ctl]
recipe = ore.recipe.fs:mkfile
path = ${buildout:bin-directory}/nginx
mode = 0755
content =
 #!/bin/sh
 PIDFILE=${nginx:location}/logs/nginx.pid
    case "$1" in
      start)
       ${nginx:location}/sbin/nginx -c ${buildout:directory}/data/conf/nginx.conf
        ;;
      stop)
        kill -QUIT `cat $PIDFILE`
        ;;
      reload)
        kill -HUP `cat $PIDFILE`
      ;;
      restart|force-reload)
        $0 stop
        sleep 1
        $0 start
        ;;
      *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
        exit 1
        ;;
    esac

[memcached]
recipe = zc.recipe.cmmi
url = http://www.danga.com/memcached/dist/memcached-1.2.2.tar.gz
extra_options = --with-libevent=${libevent:location}

[memcached-ctl]
recipe = ore.recipe.fs:mkfile
path = ${buildout:bin-directory}/memcached
mode = 0755
content =
 #!/bin/sh
 PIDFILE=${memcached:location}/memcached.pid
    case "$1" in
      start)
       ${memcached:location}/bin/memcached -d -P $PIDFILE
        ;;
      stop)
        kill `cat $PIDFILE`
        ;;
      restart|force-reload)
        $0 stop
        sleep 1
        $0 start
        ;;
      *)
        echo "Usage: $SCRIPTNAME {start|stop|restart}" >&2
        exit 1
        ;;
    esac


[libevent]
recipe = zc.recipe.cmmi
url = http://www.monkey.org/~provos/libevent-1.3b.tar.gz

[jetty]
recipe = hexagonit.recipe.download
url = http://dist.codehaus.org/jetty/jetty-6.1.7/jetty-6.1.7.zip
strip-top-level-dir = true

[jetty-ctl]
recipe = ore.recipe.fs:mkfile
path = ${buildout:bin-directory}/jetty
mode = 0755
content =
 #!/bin/sh
    case "$1" in
      start)
       sh ${jetty:location}/bin/jetty.sh start
        ;;
      stop)
       sh ${jetty:location}/bin/jetty.sh stop
        ;;
      restart)
       sh ${jetty:location}/bin/jetty.sh restart
        ;;
      *)
        echo "Usage: $SCRIPTNAME {start|stop|restart}" >&2
        exit 1
        ;;
    esac

[exist]
recipe = hexagonit.recipe.download
url = http://prdownloads.sourceforge.net/exist/eXist-setup-1.2.0-rev7233.jar
download-only = true

[exist-setup]
recipe = plone.recipe.command
command = java -jar ${exist:location}/eXist-setup-1.2.0-rev7233.jar -p ${buildout:parts-directory}/exist

[exist-ctl]
;; java -Dserver.xml=server2.xml -jar start.jar standalone
;; java -jar start.jar shutdown -uri=xmldb:exist://localhost:8088/xmlrpc
recipe = ore.recipe.fs:mkfile
path = ${buildout:bin-directory}/exist
mode = 0755
content =
 #!/bin/sh
    case "$1" in
      start)
       sh ${exist:location}/bin/server.sh
        ;;
      stop)
       sh ${exist:location}/bin/shutdown.sh
        ;;
      *)
        echo "Usage: $SCRIPTNAME {start|stop}" >&2
        exit 1
        ;;
    esac


[diagrammer]
recipe = ore.recipe.fs:mkfile
mode = 0755
path = ${buildout:bin-directory}/diagrammer
content =
 #!/bin/sh
  DOCS_FOLDER=${buildout:directory}/docs
  DOCGEN_FOLDER=${buildout:directory}/templates/docgen
  SAXON9=$DOCGEN_FOLDER/saxon9.jar
  mkdir -p $DOCS_FOLDER
  ${buildout:bin-directory}/python ${buildout:directory}/src/bungeni.main/bungeni/core/workflows/dia.py ${buildout:directory}/docs
  dot -Tpng -O $DOCS_FOLDER/*.dot
  TOC_FILE=$DOCS_FOLDER/toc.txt
  TYPES_WS_FILE=$DOCGEN_FOLDER/.types_ws.xml
  CUSTOM_PATH=`${buildout:bin-directory}/python -c'from bungeni.capi import capi;print capi.get_root_path()'`
  $DOCGEN_FOLDER/tocgen.sh $CUSTOM_PATH > $TOC_FILE
  $DOCGEN_FOLDER/types_with_ws.sh $CUSTOM_PATH > $TYPES_WS_FILE 
  java -jar $SAXON9 $CUSTOM_PATH/types.xml $DOCGEN_FOLDER/types.xsl > $DOCS_FOLDER/index.html
  for file in $CUSTOM_PATH/workflows/*.xml
  do
    pref=`basename $file .xml`
    WF_FILE=$DOCS_FOLDER/wf_$pref.html
    java -jar $SAXON9 $file $DOCGEN_FOLDER/workflow.xsl > $WF_FILE
    python $DOCGEN_FOLDER/toc.py $TOC_FILE $WF_FILE
  done
  for file in $CUSTOM_PATH/forms/*.xml
  do
    pref=`basename $file .xml` ;
    if [ "$pref" = "ui" ]; then
       continue;
    fi;
    FM_FILE=$DOCS_FOLDER/fm_$pref.html ;
    java -jar $SAXON9 $file $DOCGEN_FOLDER/form.xsl > $FM_FILE ;
  done
  for file in $CUSTOM_PATH/workspace/*.xml
  do 
    pref=`basename $file .xml`;
    if [ "$pref" = "tabs" ]; then
       continue;
    fi
    WS_FILE=$DOCS_FOLDER/ws_$pref.html
    java -jar $SAXON9 $file $DOCGEN_FOLDER/workspace.xsl > $WS_FILE
  done
  #cp $DOCGEN_FOLDER/index.html $DOCS_FOLDER
  cp $DOCGEN_FOLDER/docs.css $DOCS_FOLDER
  rm -rf $DOCS_FOLDER/*.dot


[restore-localization-forms-defaults]
recipe = ore.recipe.fs:mkfile
mode = 0755
path = ${buildout:bin-directory}/restore-localization-forms-defaults
content =
  #!/bin/sh
  ${buildout:bin-directory}/python ${buildout:directory}/src/bungeni.main/bungeni/ui/descriptor/restore.py


[admin-passwd]
recipe = ore.recipe.fs:mkfile
mode = 0755
path = ${buildout:bin-directory}/admin-passwd
content =
 #!/bin/sh
  ${buildout:bin-directory}/python ${buildout:directory}/data/scripts/admin-password.py

[reporting-documentation]
recipe = ore.recipe.fs:mkfile
mode = 0755
path = ${buildout:bin-directory}/reporting-documentation
content =
 #!/bin/sh
 mkdir -p ${buildout:directory}/docs
 mkdir -p ${buildout:directory}/docs/reporting
 ${buildout:bin-directory}/python ${buildout:directory}/data/scripts/reporting-documentation.py ${buildout:directory}/docs/reporting
