<?xml version="1.0"?>
<workflow title="Group Workflow"
    description="Workflow for Parliamentary Groups"
    permission_actions=".View .Edit .Add .Delete"
    >
    
    <!-- global grants -->
    <allow permission=".Edit" roles="ClerkSenate ClerkAssembly" />
    <allow permission=".Add" roles="ClerkSenate ClerkAssembly" />
    <allow permission=".Delete" roles="ClerkSenate ClerkAssembly" />
    
    
    <!-- features -->
    <feature name="audit" enabled="true">
        <parameter name="audit_actions" value="add modify workflow remove version translate" />
        <parameter name="include_subtypes" value="member group_assignment" />
        <parameter name="display_columns" value="user date_active object description note" />
    </feature>
    <feature name="version" enabled="true" />
    <feature name="sitting" enabled="false" />
    <feature name="address" enabled="true" />
    
    
    <!-- workflow facets -->
    <facet name="draft">
        <allow permission=".View" roles="ClerkSenate ClerkAssembly Drafter" />
    </facet>
    <facet name="public">
        <allow permission=".View" roles="Authenticated Anonymous" />
        <allow permission="group_member.View" roles="Authenticated Anonymous" />
        <allow permission="group_member.Edit" roles="ClerkSenate ClerkAssembly" />
        <allow permission="group_member.Add" roles="ClerkSenate ClerkAssembly" />
        <!-- !+GROUP_MEMBER_DELETE(mr, dec-2012) in sub-item's workflow "draft" state -->
        <allow permission="group_member.Delete" roles="ClerkSenate ClerkAssembly" />
        <!-- !+NO_REDEFINE_PERMISSION redefine of political_group_member permissions 
            to group_member to fails here (and this is the workflow used by 
            political_group_member). Work around options for this is are:
            a) do NOT use redefinePermission, so to not get false confidence that 
               it might work, and know to then call each desired permission explicitly.
            b) give political_group_member its own workflow (an option if (a) is
               adopted, with other option being to pile-up any political_group_member
               permissions into teh "shared" group workflow, as done below).
            c) determine from with each workflow/state whether any given permission 
               has been redefined to something else, and "add" the redefined version
               to granted permissions for the state/role
        -->
        <allow permission="political_group_member.View" roles="Authenticated Anonymous" />
        <allow permission="political_group_member.Edit" roles="ClerkSenate ClerkAssembly" />
        <allow permission="political_group_member.Add" roles="ClerkSenate ClerkAssembly" />
        <allow permission="political_group_member.Delete" roles="ClerkSenate ClerkAssembly" /><!-- !+GROUP_MEMBER_DELETE -->
    </facet>
    <facet name="public_frozen">
        <allow permission=".View" roles="Authenticated Anonymous" />
        <allow permission="group_member.View" roles="Authenticated Anonymous" />
        <!-- !+REDEFINE_FAIL -->
        <allow permission="political_group_member.View" roles="Authenticated Anonymous" />
    </facet>
    
    
    <state id="draft" title="Draft - Group not yet Active" actions="deactivate">
        <facet ref=".draft" />
        <facet ref="address.internal" />
    </state>
    
    <state id="active" title="Active Group" 
            actions="activate"
        >
        <facet ref=".public" />
        <facet ref="address.public" />
    </state>
    
    <state id="dissolved" title="Group is Dissolved" 
            actions="dissolve"
        >
        <facet ref=".public_frozen" />
        <facet ref="address.withdrawn" />
    </state>
    
    
    <transition title="Create"
        source=""
        destination="draft"
        trigger="automatic"
    />
    
    <transition title="Activate"
        source="draft dissolved"
        destination="active"
        trigger="manual"
        roles="ClerkSenate ClerkAssembly SpeakerSenate SpeakerAssembly"
        require_confirmation="true"
    />
    
    <transition title="Dissolve"
        source="active"
        destination="dissolved"
        condition="has_end_date"
        trigger="manual"
        roles="ClerkSenate ClerkAssembly SpeakerSenate SpeakerAssembly"
        require_confirmation="true"
    />
    
    <!-- !+ why back to "draft"? -->
    <transition title="Deactivate"
        source="active"
        destination="draft"
        trigger="manual"
        roles="ClerkSenate ClerkAssembly SpeakerSenate SpeakerAssembly"
        require_confirmation="true"
    />

</workflow>
