#summary How to install Plone
#labels bungeni-wiki
#sidebar TableOfContents

<wiki:toc max_depth="4" />


= Pre-Requisites =

You should have completed the following steps :
 
 * *[Install_PreRequisites_Fabric How to setup the Pre-requisites]* 
 * *[Install_Bungeni_Fabric How to setup Bungeni Parliamentary Information System]* 

= Build & Setup =

== Option 1: Installing using the online package index ==

{{{
fab -H <host-name-or-ip> plone_install config_ini:plone
}}}

See also [http://code.google.com/p/bungeni-portal/wiki/HowTo_SetupFabricScripts#Executing_fabric_actions Executing Fabric actions]


== Option 2: Installing using the local package index ==

Use this option only if you have a Bungeni package index running on your local network.
Set the fabric parameters for the cached buildout by setting the `local_cache` parameters appropriately See [http://code.google.com/p/bungeni-portal/wiki/HowTo_ConfigureFabricIni#local_cache Using the local_cache parameter]

{{{
fab -H <host-name-or-ip> plone_install config_ini:plone 
}}}

See also [http://code.google.com/p/bungeni-portal/wiki/HowTo_SetupFabricScripts#Executing_fabric_actions Executing Fabric actions]

== Configure the Installation == 

Log in as the admin user into plone. The default password is 'admin'

In the Zope ZMI create a new plone site called "site"

Select the following in the installation profiles for the plone site:
 * Bungeni CMS Policy
 * Bungeni CMS Theme

Now log in to the newly created plone site as admin.

Click on site-setup -> Add on products.

 * Bungeni CMS Policy & Bungeni CMS theme, and click install.
 * select 'GroupWorkspace Profile' in the same page and click 'install'.
 * do the same for "BungeniHelpCenter", ContentWellPortlets", plonegalleryview, iqpp.plone.commenting and FCKeditor.
 * Adjust the commenting options: These are found on the Plone Control Panel under Add-on Product Configuration, the button named 'Commenting'.
  * Enable the following settings: Comments, Moderation and Show Preview.

== Import demo structure ==

 * On the filesystem create an import folder in the root plone directory (the buildout foldr for plone) .The folder should be called import.

 * Copy and unzip the contents of [http://dist.bungeni.org/plone/import/import-0.1.tar.gz http://dist.bungeni.org/plone/import/import-0.1.tar.gz] into that folder

 * Run the python script 'import_data' in the /etc folder (using the plone python). Before running the script, edit the file appropriately and put in the necessary values for username, password (admin, admin) and the plone site that you want to import to.


== Updating a Plone installation ==

It is standard procedure to re-install a product when any changes have been made to it.
This done in the zmi->portal_setup. Import the profile of the product that has changed.
Or alternativley use the zmi-portal_quickinstaller to reinstall said product.


== Folder Structure == 

Plone gets installed within the Bungeni folder 

{{{
./bungeni
|-- bin
|-- buildconf
|-- cache
|-- data
|-- develop-eggs
|-- eggs
|-- locales
|-- logs
|-- parts
|-- patch
|-- plone
|   |-- Products
|   |-- bin
|   |-- develop-eggs
|   |-- downloads
|   |-- eggs
|   |-- etc
|   |-- parts
|   |-- src
|   `-- var
|-- src
|-- templates
`-- testdatadmp
}}}


== Starting and Stopping plone == 

See [http://code.google.com/p/bungeni-portal/wiki/HowTo_SupervisorServiceManager#plone using supervisor to start / stop Plone]

= Next Steps =

 * *[Install_DeliverancePortal_Fabric How to setup Deliverance Portal]* 

= Manual Install = 

This documents manual installation of plone without using assistive scripts like Fabric. The following steps have been tested on Ubuntu 8.04.

==Pre-requisites==

  * Build environment (on ubunutu do a `sudo apt-get install build-essentials` )
  * user Python 2.4 built from source. (on ubuntu /debian you will need to install development libaries/headers for imaging (libjpeg62-dev, libfreetype6-dev, libpng12-dev)  and bz2 (libbz2-dev) libraries) and for ssl support openssl and libssl (openssl, libssl-dev) *(Oct 15 2010 build : libldap2-dev libsasl2-dev libssl-dev )*
  * A working bungeni parlimentary information system installation
   
==SSL support for Python==

In ubuntu installing openssl and libssl-dev does not result in Python getting built with ssl support as the default ssl paths for include/ lib referenced by the Python build are different in Ubuntu. To build ssl support into Python on Ubuntu set the CPPFLAGS and LDFLAGS environment variables as follows :

{{{
 CPPFLAGS=-I/usr/include/openssl LDFLAGS=-L/usr/lib/ssl
}}}

now run ./configure ; make ; make install 

To test if python has ssl support run this in the python shell :

{{{
import urllib
f = urllib.urlopen('https://svn.openplans.org')
# if it returns no errors ... the ssl support works.. 
}}}

==Setup==

Note: 
the python setuptools package (a python egg) is used by buildout, if you have an older version of setuptools, you might need to update it manually first (from http://cheeseshop.python.org/pypi/setuptools/) in the python used for zope. 
Update instructions at: http://peak.telecommunity.com/DevCenter/EasyInstall#installation-instructions

If you dont have setuptools installed, buildout downloads and installs it automatically.

===Core Installation ===

In order to install it, use buildout. Plone for Bungeni is always installed within the Bungeni Buildout folder and resides in a sub-folder called plone:

{{{
$ cd bungeni_buildout_folder
$ svn co https://bungeni-portal.googlecode.com/svn/plone.buildout/trunk/ --username <username> plone
$ cd plone
$ python bootstrap.py # not the system python! The one you use with Plone, i.e. 2.4.x. 
## prefix the buildout command with the path to Bungeni's postgresql bin so that
## the plone buildout finds the correct pg_config
$ PATH=../parts/postgresql/bin:$PATH ./bin/buildout  # wait a while..
}}}

Once this has successfully completed. Add the 1st user to plone - the admin user :
{{{
./bin/addzope2user admin password
}}}

Now edit the zope instance home variable to an absolute path pointing to the plone buildout folder :

{{{
## was %define INSTANCE .
%define INSTANCE /home/undesa/bungeni_portal/current/plone
}}}

Create a folder called var/filestorage :
{{{
mkdir -p ./var/filestorage
}}}

Now you can start plone :

{{{
./bin/paster serve etc/deploy.ini
}}}

Now run the configuration steps as described in [#Configure_the_Installation Configure the Installation]