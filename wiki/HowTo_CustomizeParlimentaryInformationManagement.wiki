#summary How to customize parliamentary information management

<wiki:toc max_depth="5" />

== Overview ==
=== Using the customization folder === 
=== Making a private customization folder ===
=== Testing customizations ===
=== Best practices ===
 
== How to configure languages ==
=== Purpose ===
Here you can set the default launguage used in the Bungeni user interface as well as enable alternative languages.
If you have enabled more than one language, the default language (see below) will be used in the Bungeni user interface i.e. if the browser language is not one of the alternative languages.

=== How to enable and set the default language ===

Bungeni language configuration is managed in this file:
{{{
{BUNGENI_INSTALL_PATH}/src/bungeni_custom/__init__.py. 
}}}
The location of this file may be different if you have a custom configuration location. (See [HowTo_CustomizeParlimentaryInformationManagement#Using_the_customization_folder Using the customization folder])

The parameters in the table below will be found in this file and determine how languages are handled in Bungeni.

|| *Parameter (Sample)* || *Notes* ||
|| zope_i18n_allowed_languages = "ar en es es-do fr it nl pt ru sw tk" || A space separated string of language ids of available languages.<br/> To enable or disable language, add or remove its id from this list ||
|| _default_language = "en"_ || This is the default language used in the system. It should be one of those in `zope_i18n_allowed_languages`. ||
|| _right_to_left_languages = "ar"_ || This is a space separated list of language ids for which the user interface should be displayed right-to-left. <br/> These language ids must be a subset of `zope_i18n_allowed_languages` ||
|| _zope_i18n_compile_mo_files = True_ || Set this to True/False to turn on/off compiling of message catalogs into a binary format (faster). ||


Only enabled languages will show up in Bungeni's language menu. With the `zope_i18n_allowed_languages` setting above, this would be the resulting language menu.

http://bungeni-portal.googlecode.com/svn/wiki/images/languages-menu.png


== Vocabularies == 
=== Managing  vocabularies ===

== Roles == 

Roles in Bungeni are used to specify who has permission to perform different tasks. Please have a look at this [http://wiki.zope.org/zope3/secureobjects.html page] for a full description of how security works in Bungeni

=== System roles - what they mean and default usage ===

There are two main system roles that are essential to how Bungeni works, bungeni.Owner and bungeni.Signatory. This roles are used in Bungeni to assign permissions to the owner and signatory of a document respectively.

=== How to set up user defined roles ===

A Bungeni administrator may define additional parliament specific roles in bungeni_custom/sys/acl/roles.zcml. A role added here may then be associated with an office while adding an office.

<role title="Clerk" role="bungeni.Clerk"/>

In the example above, a role is created called bungeni.Clerk. The title "Clerk" is what appears in the UI. This role may then be used anywhere else in the system where a role may be specified eg. the workspace configuration or the workflow configuration.

To associate this role with an office, edit an office and select it in the "roles" select box.


==== Sub Roles ====

One may also add sub roles to Bungeni that may be used to grant finer grained permissions.

{{{
<bungeni:subrole id="bungeni.Clerk.QuestionClerk" title="Question Clerk" role="bungeni.Clerk"/>
}}}

In the above example, a new subrole is created to is subordinate to the bungeni.Clerk role. The title of the subrole is what appears in the UI and the ID is used elsewhere in the system.



== Parliamentary Metadata ==
=== Adding a parliament ===
=== Adding Parliamentary entities ===
=== Committees ===
=== Groups ===
=== Government ===
=== Users ===
=== Offices ===

== Documents ==
=== Enabling and disabling custom document types === 

== Forms ==
=== How to localize forms === 
=== Form UI (workspace) === 
=== Changing display order of fields === 
=== Show/Hide fields on a Form per mode ===  

== Work-flow  ==
=== How to map documents/groups/membership workflow === 
=== How to configure documents/groups/membership workflow === 

== Workspaces ==
Every user who logs on to Bungeni has a workspace, where they may view, add and edit documents. The workspace in Bungeni is very similar to the interface provided by email applications such as Gmail or Yahoo mail.


The workspace has 3 main sections
  # my documents - Here a user finds all the documents that he has created, edited or signed in the lifetime of the current parliament
  # documents under consideration - This section contains all the documents currently going through the parliamentary document workflow that are viewable by other users ie. they are in states tagged "public" in the workflow configuration and are not tagged as being in terminal state.
  # scheduling - The schedule of sittings of the plenary and committees is found here. See section on scheduling


=== my documents section ===

The "my documents" section has four tabs

  * draft - This tab contains all the documents that the user is currently working on that have not been submitted to anyone else
  * inbox - This tab contains all the documents that require attention from the user, eg. a bill that requires clarification from an MP
  * sent - This tab contains documents that the user has worked on and submitted
  * archive - Documents this user submitted that have reached their terminal state in the current parliament are found in this tab


=== How to configure workspaces === 

Every document type has a workspace configuration file in the workspace folder of the bungeni_custom folder.

The administrator needs to specify which workspace tabs a document in a certain state will appear in for the different users.

For example

{{{
<state id="clarification_required">
  <tab id="inbox" roles="bungeni.Owner"/>
  <tab id="sent" roles="bungeni.Clerk"/>
</state>
}}}

The above snippet specifies that a document in the state, "clarification_required" will appear in the inbox of the person who introduced it(bungeni.Owner) and in the sent folder of the clerk(bungeni.clerk)

== Notification  ==




=== How to set up notifications === 

== Publications (agenda, minutes, reports) ==
=== How to localise  agenda, minutes, reports ===
  * [XHTML_Report_Templates Writing Templates for Report Generation]

== Layout, theme and formats == 
The layout, look and feel of the portal is controlled by a theme template in conjunction with a set of css styles and rule files. A default theme is enabled for each Bungeni installation.

=== Enabling a country theme ===

Sample country themes exist at this location: http://bungeni-portal.googlecode.com/svn/portal.country_themes/trunk

To enable a country theme, edit the country_theme parameter in the Fabric 'setup.ini' file. The default setting is as follows:

{{{
[custom]
...
country_theme = default
}}}

Set this parameter to the appropriate value (_It is recommended to use the ISO 3166-1 alpha-2 codes_) e.g. for the Kenya theme the setting would be as follows:

{{{
[custom]
...
country_theme = ke
}}}

then run the following command in fabric


{{{
fab -H localhost enable_country_theme config_ini:portal 
}}}

=== Changing page layout ===   
=== Changing the Menu Order and Structure ===   

=== Styling with CSS  ===  

folder structure:

{{{
|-- css
|-- images
|-- js
`-- themes
    |-- layout.html
    `-- rules.xml
}}}

The CSS files for styling Bungeni are broken down into two files.

_reset.css_ and _skin.css_

  * reset.css - Has styling properties that affect width, height and alignment of Bungeni.

  * skin.css - Cosmetic changes such as text-color, background-color, border, typography are done here. 

styling in both CSS files is split into four major sections:

  * GENERAL - Applies site-wide
  * TEMPLATE-PORTAL - Anonymous user-space or public view
  * TEMPLATE-WORKSPACE - Logged in area
  * TEMPLATE-PORTAL-EXIST - Public view from an XML repository

Denoted at the start by a comment banner. e.g. for TEMPLATE-PORTAL

{{{
/* =============================================================================
   TEMPLATE PORTAL - Styling applied on portal
   ========================================================================== */
}}}

These are top-level class selector's found on the HTML `body` tag e.g. `<body class="template-portal">`

To increase width of the portal from the default `960px`.

_reset.css_ -> find `template-portal` top-level section and look under width sub-section

Similar process for change background-color albeit under the _skin.css_ file

=== Theming Bungeni using Skins ===  

Bungeni skins are located under the custom folder:

{{{
{BUNGENI_INSTALL_PATH}/src/bungeni_custom/ 
}}}