#summary How to Install Bungeni with Fabric
#sidebar TableOfContents

<wiki:toc max_depth="4" />

= Introduction =

This page explains how to install Bungeni with Fabric.

= bungeni.ini =

== The global section ==

The bungeni.ini file has a global section which sets certain parameters globally for the build.

{{{
[global]
system_root = /home/undesa/test
development_build = True
local_cache = False
app_host = 92.243.15.192
distro_override = Ubuntu.10.04-gandi
}}}


These parameters are explained in the below sections.


=== system_root == 

This specifies the root folder of the installation

{{{
system_root = /home/undesa/test
}}}

=== development_build == 

This indicates whether this is a development build or not.

{{{
development_build = True
}}}

When set to `False` - fabric does only anonymous checkouts from subversion. 
When set to `True` - fabric checks out source based on the user and password set in the `[scm]` section.


== local_cache == 

Indicates whether the build must make use of a local package index and archive cache.

{{{
local_cache = False
}}}

For most deployments you would set this to false.
If you have a package index for bungeni in your network, you can set this parameter to true - but then you will need to set *all* the following parameters :
 * local_index in `[bungeni]`, `[portal]` and `[plone]`
 * local_url in `[postgresql]`, `[xapian]` and `[xapian-bindings]`

== app_host == 

Specifies the IP address or domain name of the host on which you are deploying.

{{{
app_host = 92.243.15.192
}}}

If you are deploying only onto the local computer and not accessing the installation from another computer, you can set this to `localhost`.

== distro_override == 

Specify a distro package list.

{{{
distro_override = Ubuntu:10.04-gandi
}}}

Fabric queries a file called `distro.ini` for a list of required packages. Required packages are specified in sections grouped by distribution name and release id e.g. :
{{{
....
[Ubuntu]
8.04 = 
	package-dev
	linux-headers
....
}}}

The package name and the distribution are automatically detected by fabric. To override this behavior you can specify a distribution name and release id specific to your requirements. The distribution name and package name must be separated by a colon (':').

In the example above `distro_override` has been specified as `Ubuntu:10.04-gandi`. Fabric will now look for the required packages list in `distro.ini` under the following section :
{{{
[Ubuntu]
10.04-gandi = 
	pacakge-spec
	package-two
}}}

== The scm section == 

This section has 2 parameters - the first is the svn user name , and the second is the password :

{{{
[scm]
user=ashok.hariharan
pass=azo28nd8
}}}

Note that the user and pass parameters are used only when the `development_build` parameter is set to `True` in `[global]`


