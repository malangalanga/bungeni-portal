#summary Guide on Defining XML Templates for Reports and Documents

= Building XML templates for reports and documents =

<warning> *This wiki page is still in the works* </warning>

<wiki:toc max-depth="3"/>

= Introduction =
XML templates in Bungeni are used to define the structure and content of these documents:
  * Reports of a group schedule or group sitting e.g. for a Parliament or a committee
  * PDF/ODT versions of parliamentary documents

== Preliminaries ==
=== Where to look for and customize templates ===
 * XML templates are stored in `bungeni_custom` under these directories
   * Templates for reports
     * `{BUNGENI_HOME}/src/bungeni_custom/reporting/templates/xml/reports`^1^
   * Templates for parliamentary documents
     * `{BUNGENI_HOME}/src/bungeni_custom/reporting/templates/xml/documents`^1^

=== How to name files ===
 * The file names for XML templates are XML files ending with extension `.xml`

= XML Structure =
The XML structure for templates follows this structure:
{{{
<?xml version="1.0" encoding="UTF-8">
<template language="{{ REPORT LANGUAGE CODE }}">
    <title>{{ REPORT TITLE }}</title>
    <description>{{ REPORT DESCRIPTION }}</description>
    <content>
        <heading>
            {{ HEADING COMPONENTS COMPOSED OF <text> and <listing> NODES }}
        </heading>
        <body>
            {{ BODY COMPONENTS COMPOSED OF <text> and <listing> NODES }}
        </body>
    </content>
    <styles>
        <style for="{{LISTING SOURCE}}">
            {{ STYLE FOR LISTING COMPOSED OF <text> and <listing> NODES }}
        </style>
    </styles>
</template>
}}}

= Sample report template =
Say we want to allow generation of a report listing all questions in a month
from a provided starting date for a group. This would look like this:

{{{
<?xml version="1.0" encoding="UTF-8"?>
<template language="en">
    <title>Monthly Questions</title>
    <description>One month of questions.</description>
    <length>4w</length>
    <content>
        <heading>
            <text source="title" type="heading"/>
        </heading>
        <body>
            <listing source="sittings">
                <listing source="questions" title="Questions"/>
            </listing>
        </body>
    </content>
</template>
}}}

== Description of parts ==

 * The template starts off with a `<template>` node with an optional language attribute
  * The language code provided here will be persisted with the generated report
 * The text inside the `<title>` node is rendered as the report header (referenced in the *heading* node)
 * The length node is the timespan that the report should cover, starting from a provided starting date:
  * We use a simple notation to specify the length (_*n*_ is a positive integer greater than _1_)
    # *nh* evaluates to n hours such that `1h` evaluates to one (1) hour
    # *nd* evaluates to n days such that `5d` evaluates to five (2) days
    # *nw* evaluates to n weeks such that `4w` evaluates to four (4) weeks
    # We can also use combinations of _w_, _d_, _h_ depending on requirements
  * See [XMLReportTemplates#Sample_report_timespans] for detailed samples
    
 * The *content* section is composed of the *heading* and the *body*
  * Both may contain *listing* and *text* nodes which are the primary structures for defining content
  * In our sample above these content elements are defined:
    # The *heading* is composed of a text node rendered as a *heading* (`type="heading"`). The text is sourced from the report's title.
    # The body is composed of a listing of *sittings* for the selected period
      * The content of each sitting is another listing of *questions* if any
      * If we wanted to include motions this would change to:
        {{{
<listing source="sittings">
    <listing source="questions" title="Questions"/>
    <listing source="motions" title="Motions"/>
</listing>
        }}}

== Sample report timespans ==

|| *Spec* || *Evaluates to* || *Equivalent Hours* ||
|| 1h || 1 hour || _N/A_ ||
|| 3d || 3 days || 72h ||
|| 2d6h || 2 days and 6 hours || 54h ||
|| 2w || 2 weeks || 336h ||


= Styling listings =
From the sample above, the rendering for the listing of *questions* would be a simple table.
Here is what a simple listing of questions would look like:

|| Question regarding Matter A || A short description of matter A ||
|| Question regarding Matter B || A short description of matter B ||

However, we might want to customize the display for each a listing of questions.
For this reason, we can introduce a *styles* element with styles for named listings.
For instance, a custom style for questions may look like this:
{{{
<styles>
    <style for="questions">
        <text source="dc:title" type="heading"/>
        <text source="dc:mover"/>
        <listing source="signatories" title="Signatories"/>
        <listing source="files" title="Attachments"/>
    </style>
</styles>
}}}

During report generation, the report renderer will check for a style and
render items in a listing according to the provided style.

--_Note that a style definition is still composed of *listing* and *text* elements_ *

== Text nodes display ==
Text nodes are rendered as html paragraphs by default.
However, you can render text as headings by passing in a type property to the text node like so:
{{{
    <text source="dc:description" type="heading"/>
}}}

=== Text nodes with no source ===
You can have text nodes with no content source to include arbitrary text:
{{{
    <text type="heading">All rights reserved. Parliament of Bungeni.</text>
}}}

= Available sources for content in reports mode ==
Sources are the properties which we can provide as the *source* property for a a * text* or *listing* node.
Here is a listing of sample sources as at r8607. The top level is the report:^2^

 * title
 * publication_date
 * start_date
 * end_date
 * sittings *{LIST}*^3^
   * dc:title
   * dc:description
   * bills *{LIST}*
    * {{ Each Bill }}
     * dc:title
     * dc:description
     * dc: mover
     * signatories
     * files
   * motions *{LIST}*
     * {{ Each motion }}
      * {{ Same as bill }}
   * questions *{LIST}*
     * {{ Each question }}
      * {{ Same as bill }}
   * tableddocuments *{LIST}*
     * {{ Each tabled document }}
      * {{ Same as bill }} *{LIST}*
   * agendaitems *{LIST}*
     * {{ Each agenda item }}
      * {{ Same as bill }}
      
= Footnotes =
^1^ This location may vary depending on where your bungeni instance loads customizations from.

^2^ TODO: Provide a script to generate documentation of available _sources_

^3^ Items labelled {LIST} may be used as sources in *listing* nodes