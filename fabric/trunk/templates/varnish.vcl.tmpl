vcl 4.0;
import std;

backend default { 
	.host = "%(server_name)s"; 
	.port = "%(server_port)s"; 
} 

acl purge{
    "localhost";
}

sub vcl_recv { 
	# allow PURGE from upon POST 
	if (req.method =="PURGE") {
            if(!client.ip ~ purge){
                return(synth(403, "Not allowed"));
            }
            return (hash);
        }
        #if (req.method == "POST" || req.method == "PUT") { 
        #        purge("req.http.host == " req.http.Host "&& req.url == "  req.url); 
        #        return(synth(200, "Ban added"));
	#}
	# remove unnecessary cookies 
	if (req.http.cookie ~ "wc.cookiecredentials") { 
		# found wc.cookiecredentials in request, passing to backend server 
		return (hash); 
	} else { 
		unset req.http.cookie; 
	} 
} 


sub vcl_backend_response { 
	unset beresp.http.Set-Cookie; 
	set beresp.ttl = %(time_to_live)s; 
	return(deliver); 
} 

# Routine used to determine the cache key if storing/retrieving a cached page. 
sub vcl_hash { 
	# Do NOT use this unless you want to store per-user caches. 
	if (req.http.Cookie) { 
		hash_data(req.http.Cookie);
	} 
} 

sub vcl_deliver { 
	# send some handy statistics back, useful for checking cache 
	if (obj.hits > 0) { 
		set resp.http.X-Cache-Action = "HIT"; 
		set resp.http.X-Cache-Hits = obj.hits; 
	} else { 
		set resp.http.X-Cache-Action = "MISS"; 
	} 
} 
