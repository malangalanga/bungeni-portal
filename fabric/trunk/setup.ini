[global]
# root folder for deployment - the cinst and cbild folders are created within the system_root
# If you are making updates and checking in this file -- please remember to leave the path as 
# "/home/undesa"
system_root = ~
# setting this to True does a secure checkout from svn using the provided username and password in [scm]
development_build = False
# when local cache is set to true, the local_index property is used to look for plone, bungeni,portal packages
local_cache = False
app_host = localhost
verbose = true
apps_dir = bungeni_apps
apps_tmp = .bungenitmp
#to explicitly specify a distro section to use, you can use the distro_override property below
#Note that, this is generally not require since fabric uses LSB to determine distro details
#distro_override = Ubuntu:10.04-gandi
#

#Specify a release below - releases are described in release.ini
release=HEAD

[supervisor]
host=127.0.0.1
port=8888
python=2.7

[scm]
#Required when development_build = True
user=None
pass=None

[bungeni]
local_index=http://192.168.0.14:6543/bungeni
python=2.7
repo=bungeni-portal.googlecode.com/svn/bungeni.buildout/trunk
admin_user=admin
admin_password=admin
dump_file=dump.txt
http_port = 8081
attachments_folder=fs
attachments_archive=fs.tar.gz


[plone]
local_index=http://192.168.0.14:6543/plone
python=2.7
site_content=http://bungeni-portal.googlecode.com/files/import-0.1.tar.gz
repo=bungeni-portal.googlecode.com/svn/plone.buildout/trunk
http_port = 8082

[portal]
##themes are relative to the portal address /static/themes/ uri
theme = layout.html
python=2.7
local_index=http://192.168.0.14:6543/plone
repo=bungeni-portal.googlecode.com/svn/portal.buildout/trunk
http_port=8080
static_port=8083
## Next two parameters are for deployment purposes under
## web server (e.g. Apache, Nginx ...). 
## Running in a development environment --- 
## if in a development environment and not deploying behind 
## a web server use app_host value for web_server_host ; and
## use http_port value for web_server_port
## 
## Runing in a deployment environment ---
## if you are deploying it behind a web server and a domain 
## set web_server_host to the domain e.g. kenya.bungeni.org
## set web_server_port to 80 -- which means you can now 
## browse bungeni on http://kenya.bungeni.org/
web_server_host = localhost
web_server_port = 8080


[custom]
## The 'folder' parameter is applicable only for the 
## switch_bungeni_custom command.
## This folder is created relative to the buildout folder
folder = customizations
enabled_translations = en:en_KE:fr:it:sw:pt
translatable_packages = core:ui:models
demo_theme = default
theme_repo = https://bungeni-portal.googlecode.com/svn/portal.country_themes/trunk/


[python27]
download_url = http://www.python.org/ftp/python/2.7.7/Python-2.7.7.tgz

[python26]
download_url = http://www.python.org/ftp/python/2.6.7/Python-2.6.7.tgz


[imaging]
# python imaging
download_url = http://bungeni-portal.googlecode.com/files/Imaging-1.1.7.tar.gz

#[appy]
#download_url = http://launchpad.net/appy/0.7/0.7.0/+download/appy0.7.0.zip

#### You should never need to update the below unless you are installing from a local cache ####
#### i.e. relevant only if local_cache = True

[postgresql]
download_url=http://ftp.postgresql.org/pub/source/v9.3.4/postgresql-9.3.4.tar.gz
#### ~/Downloads/postgresql-9.2.0.tar.gz
bungeni-db-name=bungeni

[xapian]
local_url=http://192.168.0.14:6543/cache/xapian-core/xapian-core-14157.tgz

[xapian-bindings]
local_url=http://192.168.0.14:6543/cache/xapian-bindings/xapian-bindings-14157.tgz

[exist]
repo=bungeni-exist.googlecode.com/svn/xq-framework/trunk/db
config_editor_repo=bungeni-exist.googlecode.com/svn/config_editor
download_url=http://bungeni-testing.googlecode.com/svn/bungeni-install-reqd-files/exist_xmldb-v2.2.RC1.tar.gz
#download_url=http://bungeni-exist.googlecode.com/files/exist_xmldb-v2.18252.tar.gz
http_port= 8088
startup_mem= 256m
max_mem=768m
setup_user=admin
setup_pass=
fw-loc-base=http://bungeni-exist.googlecode.com/files/
#xq-fw-r408.tar.gz
#
[rabbitmq]
download_url=http://bungeni-testing.googlecode.com/svn/bungeni-install-reqd-files/rabbitmq-server-generic-unix-3.3.2.tar.gz
download_admin_url=http://bungeni-testing.googlecode.com/svn/bungeni-install-reqd-files/rabbitmq-admin-3.3.2
username=admin
password=admin
vhost=/
hostname=localhost
port=55672

[glue-script]
repo=bungeni-exist.googlecode.com/svn/glue/trunk
download_url=http://bungeni-exist.googlecode.com/files/jython-2.5.3.jar
required_libs=
    polib==1.0.4
    Babel==0.9.6
interval = 5
startup_mem = 128m
max_mem = 324m

[java]
openjdk-7-jre=/usr/lib/jvm/java-7-openjdk
openjdk-6-jre=/usr/lib/jvm/java-6-openjdk

[varnish]
#version 3.0.5
download_url=https://repo.varnish-cache.org/source/varnish-4.0.1.tar.gz
bind_host=127.0.0.1
bind_port=8000
backend_host=127.0.0.1
backend_port=8080
cache_size=512M
time_to_live=5h

[jython]
config = %(java)s/bin/java -Xms%(startup_mem)s -Xmx%(max_mem)s -cp %(user_jython_home)s/jython.jar:%(user_glue)s/lib/jaxen/jaxen.jar:%(user_glue)s/lib/xerces/xercesImpl.jar:%(user_glue)s/lib/saxon/saxon9he.jar:%(user_glue)s/lib/dom4j/dom4j-1.6.1.jar:%(user_glue)s/lib/log4j/log4j.jar:/lib/bungeni/editorplugininterface.jar:%(user_glue)s/lib/transformer/odttransformer.jar:%(user_glue)s/lib/commons-lang/commons-lang-2.3.jar:%(user_glue)s/lib/jsoup/jsoup-1.6.1.jar:%(user_glue)s/lib/zip4j/zip4j_1.2.8.jar:%(user_glue)s/lib/sardine/sardine.jar:%(user_glue)s/lib/sardine/httpclient-4.2.jar:%(user_glue)s/lib/sardine/httpcore-4.2.1.jar:%(user_glue)s/lib/sardine/slf4j-api-1.6.2.jar:%(user_glue)s/lib/sardine/commons-logging-1.1.1.jar:%(user_glue)s/lib/sardine/commons-codec-1.4.jar:%(user_glue)s/lib/rabbitmq/rabbitmq-client.jar:%(user_glue)s/lib/rabbitmq/mime-util-2.1.3.jar:%(user_glue)s/lib/jyson/jyson-1.0.2.jar org.python.util.jython
